/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_SENSORS_PB_H_INCLUDED
#define PB_SENSORS_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _BatteryData {
    float voltage;
    float current;
} BatteryData;

typedef struct _EnviroData {
    float altitude;
    float temperature;
    float pressure;
} EnviroData;

typedef struct _GpsData {
    bool fix;
    float lat;
    float lon;
    float speed;
    uint32_t satellites;
    float altitude;
    uint32_t time;
    uint32_t date;
    uint32_t hdop;
    uint32_t quality;
} GpsData;

typedef struct _ImuData {
    float ax;
    float ay;
    float az;
    float gx;
    float gy;
    float gz;
    float mx;
    float my;
    float mz;
    float yaw;
    float pitch;
    float roll;
} ImuData;

typedef struct _RadioData {
    float rssi;
    int32_t frequency_error;
    int32_t snr;
} RadioData;


/* Initializer values for message structs */
#define ImuData_init_default                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define GpsData_init_default                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define EnviroData_init_default                  {0, 0, 0}
#define BatteryData_init_default                 {0, 0}
#define RadioData_init_default                   {0, 0, 0}
#define ImuData_init_zero                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define GpsData_init_zero                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define EnviroData_init_zero                     {0, 0, 0}
#define BatteryData_init_zero                    {0, 0}
#define RadioData_init_zero                      {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BatteryData_voltage_tag                  1
#define BatteryData_current_tag                  2
#define EnviroData_altitude_tag                  1
#define EnviroData_temperature_tag               2
#define EnviroData_pressure_tag                  3
#define GpsData_fix_tag                          1
#define GpsData_lat_tag                          2
#define GpsData_lon_tag                          3
#define GpsData_speed_tag                        4
#define GpsData_satellites_tag                   5
#define GpsData_altitude_tag                     6
#define GpsData_time_tag                         7
#define GpsData_date_tag                         8
#define GpsData_hdop_tag                         9
#define GpsData_quality_tag                      10
#define ImuData_ax_tag                           1
#define ImuData_ay_tag                           2
#define ImuData_az_tag                           3
#define ImuData_gx_tag                           4
#define ImuData_gy_tag                           5
#define ImuData_gz_tag                           6
#define ImuData_mx_tag                           7
#define ImuData_my_tag                           8
#define ImuData_mz_tag                           9
#define ImuData_yaw_tag                          10
#define ImuData_pitch_tag                        11
#define ImuData_roll_tag                         12
#define RadioData_rssi_tag                       1
#define RadioData_frequency_error_tag            2
#define RadioData_snr_tag                        3

/* Struct field encoding specification for nanopb */
#define ImuData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    ax,                1) \
X(a, STATIC,   SINGULAR, FLOAT,    ay,                2) \
X(a, STATIC,   SINGULAR, FLOAT,    az,                3) \
X(a, STATIC,   SINGULAR, FLOAT,    gx,                4) \
X(a, STATIC,   SINGULAR, FLOAT,    gy,                5) \
X(a, STATIC,   SINGULAR, FLOAT,    gz,                6) \
X(a, STATIC,   SINGULAR, FLOAT,    mx,                7) \
X(a, STATIC,   SINGULAR, FLOAT,    my,                8) \
X(a, STATIC,   SINGULAR, FLOAT,    mz,                9) \
X(a, STATIC,   SINGULAR, FLOAT,    yaw,              10) \
X(a, STATIC,   SINGULAR, FLOAT,    pitch,            11) \
X(a, STATIC,   SINGULAR, FLOAT,    roll,             12)
#define ImuData_CALLBACK NULL
#define ImuData_DEFAULT NULL

#define GpsData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     fix,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    lat,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    lon,               3) \
X(a, STATIC,   SINGULAR, FLOAT,    speed,             4) \
X(a, STATIC,   SINGULAR, UINT32,   satellites,        5) \
X(a, STATIC,   SINGULAR, FLOAT,    altitude,          6) \
X(a, STATIC,   SINGULAR, UINT32,   time,              7) \
X(a, STATIC,   SINGULAR, UINT32,   date,              8) \
X(a, STATIC,   SINGULAR, UINT32,   hdop,              9) \
X(a, STATIC,   SINGULAR, UINT32,   quality,          10)
#define GpsData_CALLBACK NULL
#define GpsData_DEFAULT NULL

#define EnviroData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    altitude,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    pressure,          3)
#define EnviroData_CALLBACK NULL
#define EnviroData_DEFAULT NULL

#define BatteryData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    current,           2)
#define BatteryData_CALLBACK NULL
#define BatteryData_DEFAULT NULL

#define RadioData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    rssi,              1) \
X(a, STATIC,   SINGULAR, INT32,    frequency_error,   2) \
X(a, STATIC,   SINGULAR, INT32,    snr,               3)
#define RadioData_CALLBACK NULL
#define RadioData_DEFAULT NULL

extern const pb_msgdesc_t ImuData_msg;
extern const pb_msgdesc_t GpsData_msg;
extern const pb_msgdesc_t EnviroData_msg;
extern const pb_msgdesc_t BatteryData_msg;
extern const pb_msgdesc_t RadioData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ImuData_fields &ImuData_msg
#define GpsData_fields &GpsData_msg
#define EnviroData_fields &EnviroData_msg
#define BatteryData_fields &BatteryData_msg
#define RadioData_fields &RadioData_msg

/* Maximum encoded size of messages (where known) */
#define ImuData_size                             60
#define GpsData_size                             52
#define EnviroData_size                          15
#define BatteryData_size                         10
#define RadioData_size                           27

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
